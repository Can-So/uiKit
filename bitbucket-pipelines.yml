image: node:8.4.0
# This ensures we do a full clone on each build which prevents issues when cross referencing
# changesets and releases
clone:
  depth: full
options:
  size: 2x

pipelines:
  branches:
    master:
      - step:
          script:
            # Note: in master, this script will rebase you onto latest origin/master
            - source ./build-setup.sh
            - bolt install --pure-lockfile
            - (cd build/ci-scripts && bolt stop-if-older-build)
            - bolt build
            - bolt lint
            - bolt typecheck
            - bolt test
            - bolt test:browser:browserstack
            - bolt release
            - (cd build/ci-scripts && bolt restart-stopped-build)
          caches:
            - node

  default:
    - step:
        script:
          - source ./build-setup.sh
          - bolt install --pure-lockfile
          - bolt build
          - (node build/ci-scripts/should.run.js eslint) && bolt lint:eslint
          - (node build/ci-scripts/should.run.js tslint) && bolt lint:tslint
          - (node build/ci-scripts/should.run.js flow) && bolt typecheck:flow
          - (node build/ci-scripts/should.run.js tsc) && bolt typecheck:typescript
          - bolt test:changed
          - (node build/ci-scripts/should.run.js browserstack) && bolt test:browser:browserstack
          - (cd website && bolt deploy-staging:no-minimize) | tee output.txt
          - node build/ci-scripts/update.build.status.with.netlify.link.js
        caches:
          - node

  custom: # Pipelines that can be scheduled or triggered manually

    # This should only be called by a scheduled build
    build-website-production:
      - step:
          script:
            - source ./build-setup.sh
            - bolt install --pure-lockfile
            - (cd website && bolt deploy)
          caches:
            - node

    # This will run with the webdriver tests
    build-webdriver:
      - step:
          script:
            - source ./build-setup.sh
            - bolt install --pure-lockfile
            - bolt test:webdriver:browserstack

    # This will run essentially the branch builds, but without any optimizations and should be manually
    # run in any potentially risky builds
    run-full-suite:
      - step:
          script:
            - source ./build-setup.sh
            - bolt install --pure-lockfile
            - bolt build
            - bolt lint
            - bolt typecheck
            - bolt test
            - bolt test:browser:browserstack
            - (cd website && bolt deploy-staging:no-minimize)
    # We deliberately don't use the cache here as well
