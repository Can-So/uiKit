image: node:8.4.0
# This ensures we do a full clone on each build which prevents issues when cross referencing
# changesets and releases
clone:
  depth: full
options:
  size: 2x

pipelines:
  branches:
    master:
      - step:
          script:
            # Note: in master, this script will rebase you onto latest origin/master
            - source ./build-setup.sh
            - bolt install --pure-lockfile
            - (cd build/ci-scripts && yarn stop-if-older-build)
            - yarn build
            - yarn lint
            - yarn typecheck
            - yarn test
            # Disabled until we find the source of the flakeyness
            # - yarn test:browser:browserstack
            - yarn release
            - (cd build/ci-scripts && yarn restart-stopped-build)
          caches:
            - node

  default:
    - step:
        script:
          - source ./build-setup.sh
          - bolt install --pure-lockfile
          - yarn build
          - node build/ci-scripts/run.tool.if.changed.js eslint -- yarn lint:eslint
          - node build/ci-scripts/run.tool.if.changed.js tslint -- yarn lint:tslint
          - node build/ci-scripts/run.tool.if.changed.js stylelint -- yarn lint:stylelint
          - node build/ci-scripts/run.tool.if.changed.js flow -- yarn typecheck:flow
          - node build/ci-scripts/run.tool.if.changed.js typescript -- yarn typecheck:typescript
          - yarn test:changed
          - node build/ci-scripts/run.tool.if.changed.js browserstack -- yarn test:browser:browserstack
          - set -o pipefail && (cd website && yarn deploy-staging:no-minimize) | tee output.txt
          - node build/ci-scripts/update.build.status.with.netlify.link.js
        caches:
          - node

  custom: # Pipelines that can be scheduled or triggered manually

    # This should only be called by a scheduled build
    build-website-production:
      - step:
          script:
            - source ./build-setup.sh
            - bolt install --pure-lockfile
            - (cd website && yarn deploy)
          caches:
            - node

    # This will run with the webdriver tests
    build-webdriver:
    - step:
          script:  
            - source ./build-setup.sh
            - bolt install --pure-lockfile
            - yarn test:build:webdriver:browserstack
          caches:
            - node  

    # This will run essentially the branch builds, but without any optimizations and should be manually
    # run in any potentially risky builds
    run-full-suite:
      - step:
          script:
            - source ./build-setup.sh
            - bolt install --pure-lockfile
            - yarn build
            - yarn lint
            - yarn typecheck
            - yarn test
            - yarn test:browser:browserstack
            - (cd website && yarn deploy-staging:no-minimize)
    # We deliberately don't use the cache here as well

    landkid:
      - step:
          script:
            - source ./build-setup.sh
            - git merge master --no-edit
            - bolt install --pure-lockfile
            - yarn build
            - yarn lint
            - yarn typecheck
            - yarn test
            # Disabled until we find the source of the flakeyness
            # - yarn test:browser:browserstack

    # This build should only be run on the master branch, once per day.
    # It manually clears the cache and runs a very quick install and test to seed the jest and node_modules
    # We split into two steps so that one can clear the cache so that the second one starts with no cache
    # (Which causes it to upload when it's finished).
    # It's important for this to run fast and whilst nothing else is running, as any other build could
    # seed the cache if they finished in time.
    reseed-pipelines-cache:
      - step:
          name: Clearing old cache
          script:
            - cd build/ci-scripts
            - yarn install --pure-lockfile
            - node clear.pipelines.node.cache.js
      - step:
          name: Creating new cache
          script:
            - source ./build-setup.sh
            - bolt install --pure-lockfile
            - yarn test
          caches:
            - node
