import * as React from 'react';
import { SharedProps } from '../components/types';
import { Comment as CommentType } from '../model';
export interface Props extends SharedProps {
    comment: CommentType;
    conversationId: string;
    objectId?: string;
    containerId?: string;
    renderComment: (props: any) => JSX.Element;
}
declare const _default: React.ComponentClass<Pick<{
    comments: CommentType[];
    isHighlighted: boolean;
    comment: CommentType;
    conversationId: string;
    objectId?: string | undefined;
    containerId?: string | undefined;
    renderComment: (props: any) => JSX.Element;
    user?: import("../model/User").User | undefined;
    onAddComment?: ((conversationId: string, parentId: string, value: any, localId?: string | undefined, onSuccess?: import("../internal/actions").SuccessHandler | undefined) => void) | undefined;
    onUpdateComment?: ((conversationId: string, commentId: string, value: any, onSuccess?: import("../internal/actions").SuccessHandler | undefined) => void) | undefined;
    onDeleteComment?: ((conversationId: string, commentId: string, onSuccess?: import("../internal/actions").SuccessHandler | undefined) => void) | undefined;
    onRevertComment?: ((conversationId: string, commentId: string) => void) | undefined;
    onCancelComment?: ((conversationId: string, commentId: string) => void) | undefined;
    onCancel?: (() => void) | undefined;
    onHighlightComment?: ((commentId: string) => void) | undefined;
    onEditorOpen?: (() => void) | undefined;
    onEditorClose?: (() => void) | undefined;
    onEditorChange?: ((isLocal: boolean, value: any, conversationId: string, commentId: string | undefined, meta: any, objectId: string, containerId?: string | undefined) => void) | undefined;
    dataProviders?: import("../../../editor-json-transformer/node_modules/@atlaskit/editor-common/providerFactory").default | undefined;
    onUserClick?: ((user: import("../model/User").User) => void) | undefined;
    onRetry?: ((localId?: string | undefined) => void) | undefined;
    renderEditor?: ((Editor: typeof import("../../../editor-core/editor").default, props: import("../../../editor-core/types/editor-props").EditorProps) => JSX.Element) | undefined;
    placeholder?: string | undefined;
    disableScrollTo?: boolean | undefined;
    allowFeedbackAndHelpButtons?: boolean | undefined;
    sendAnalyticsEvent: import("../components/types").SendAnalyticsEvent;
    portal?: HTMLElement | undefined;
} & import("react-redux").DispatchProp<any> & Props, never> & Props, any> & {
    WrappedComponent: React.ComponentType<{
        comments: CommentType[];
        isHighlighted: boolean;
        comment: CommentType;
        conversationId: string;
        objectId?: string | undefined;
        containerId?: string | undefined;
        renderComment: (props: any) => JSX.Element;
        user?: import("../model/User").User | undefined;
        onAddComment?: ((conversationId: string, parentId: string, value: any, localId?: string | undefined, onSuccess?: import("../internal/actions").SuccessHandler | undefined) => void) | undefined;
        onUpdateComment?: ((conversationId: string, commentId: string, value: any, onSuccess?: import("../internal/actions").SuccessHandler | undefined) => void) | undefined;
        onDeleteComment?: ((conversationId: string, commentId: string, onSuccess?: import("../internal/actions").SuccessHandler | undefined) => void) | undefined;
        onRevertComment?: ((conversationId: string, commentId: string) => void) | undefined;
        onCancelComment?: ((conversationId: string, commentId: string) => void) | undefined;
        onCancel?: (() => void) | undefined;
        onHighlightComment?: ((commentId: string) => void) | undefined;
        onEditorOpen?: (() => void) | undefined;
        onEditorClose?: (() => void) | undefined;
        onEditorChange?: ((isLocal: boolean, value: any, conversationId: string, commentId: string | undefined, meta: any, objectId: string, containerId?: string | undefined) => void) | undefined;
        dataProviders?: import("../../../editor-json-transformer/node_modules/@atlaskit/editor-common/providerFactory").default | undefined;
        onUserClick?: ((user: import("../model/User").User) => void) | undefined;
        onRetry?: ((localId?: string | undefined) => void) | undefined;
        renderEditor?: ((Editor: typeof import("../../../editor-core/editor").default, props: import("../../../editor-core/types/editor-props").EditorProps) => JSX.Element) | undefined;
        placeholder?: string | undefined;
        disableScrollTo?: boolean | undefined;
        allowFeedbackAndHelpButtons?: boolean | undefined;
        sendAnalyticsEvent: import("../components/types").SendAnalyticsEvent;
        portal?: HTMLElement | undefined;
    } & import("react-redux").DispatchProp<any> & Props>;
};
export default _default;
