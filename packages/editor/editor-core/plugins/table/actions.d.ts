import { Transaction, EditorState } from 'prosemirror-state';
import { EditorView } from 'prosemirror-view';
import { Node as PMNode, Slice, Schema } from 'prosemirror-model';
import { Command } from '../../types';
export declare const clearHoverSelection: Command;
export declare const hoverColumns: (hoveredColumns: number[], isInDanger?: boolean | undefined) => Command;
export declare const hoverRows: (hoveredRows: number[], isInDanger?: boolean | undefined) => Command;
export declare const hoverTable: (isInDanger?: boolean | undefined) => Command;
export declare const clearSelection: Command;
export declare const toggleHeaderRow: Command;
export declare const toggleHeaderColumn: Command;
export declare const toggleNumberColumn: Command;
export declare const setCellAttr: (name: string, value: any) => Command;
export declare const insertColumn: (column: number) => Command;
export declare const insertRow: (row: number) => Command;
export declare const triggerUnlessTableHeader: (command: Command) => Command;
export declare function transformSliceToAddTableHeaders(slice: Slice, schema: Schema): Slice;
export declare const deleteTable: Command;
export declare const convertFirstRowToHeader: (schema: Schema<any, any>) => (tr: Transaction<any>) => Transaction<any>;
export declare const toggleTableLayout: Command;
export declare const createTable: Command;
export declare const goToNextCell: (direction: number) => Command;
export declare const moveCursorBackward: Command;
export declare const emptyMultipleCells: (targetCellPosition?: number | undefined) => Command;
export declare const setMultipleCellAttrs: (attrs: Object, targetCellPosition?: number | undefined) => Command;
export declare const toggleContextualMenu: Command;
export declare const setEditorFocus: (editorHasFocus: boolean) => Command;
export declare const setTableRef: (tableRef?: HTMLElement | null | undefined) => Command;
export declare const selectColumn: (column: number) => Command;
export declare const selectRow: (row: number) => Command;
export declare const showInsertColumnButton: (columnIndex: number) => Command;
export declare const showInsertRowButton: (rowIndex: number) => Command;
export declare const hideInsertColumnOrRowButton: Command;
export declare const handleCut: (oldTr: Transaction<any>, oldState: EditorState<any>, newState: EditorState<any>) => Transaction<any>;
export declare const handleShiftSelection: (event: MouseEvent) => Command;
export declare const autoSizeTable: (view: EditorView<any>, node: PMNode<any>, table: HTMLTableElement, basePos: number, opts: {
    dynamicTextSizing: boolean;
    containerWidth: number;
}) => boolean;
