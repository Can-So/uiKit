// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JIRA wiki markup - Abstract tree should match parsed structure for multiple quotes containing string 1`] = `
Array [
  Object {
    "content": Array [
      Object {
        "content": Array [
          Object {
            "text": "This is a ",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ],
    "macro": undefined,
    "text": "This is a ",
  },
  Object {
    "content": Array [
      Object {
        "content": Array [
          Object {
            "text": "quote1",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ],
    "macro": Object {
      "attrs": Object {},
      "macro": "quote",
    },
    "text": "quote1",
  },
  Object {
    "content": Array [
      Object {
        "content": Array [
          Object {
            "text": "quote2",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ],
    "macro": Object {
      "attrs": Object {},
      "macro": "quote",
    },
    "text": "quote2",
  },
]
`;

exports[`JIRA wiki markup - Abstract tree should match parsed structure for noformat example 1`] = `
Array [
  Object {
    "content": Array [
      Object {
        "content": Array [
          Object {
            "text": "This is a ",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ],
    "macro": undefined,
    "text": "This is a ",
  },
  Object {
    "content": Array [
      Object {
        "text": "no format thing with ",
        "type": "text",
      },
    ],
    "macro": Object {
      "attrs": Object {},
      "macro": "noformat",
    },
    "text": "no format thing with ",
  },
  Object {
    "content": Array [
      Object {
        "text": "inside",
        "type": "text",
      },
    ],
    "macro": Object {
      "attrs": Object {},
      "macro": "noformat",
    },
    "text": "inside",
  },
]
`;

exports[`JIRA wiki markup - Abstract tree should match parsed structure for panel with attributes and a nested quote 1`] = `
Array [
  Object {
    "content": Array [
      Object {
        "content": Array [
          Object {
            "text": "Panel with nested quote here",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ],
    "macro": Object {
      "attrs": Object {},
      "macro": "quote",
    },
    "text": "Panel with nested quote here",
  },
  Object {
    "content": Array [
      Object {
        "content": Array [
          Object {
            "text": ".",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ],
    "macro": undefined,
    "text": ".",
  },
]
`;

exports[`JIRA wiki markup - Abstract tree should match parsed structure for quote example with a panel inside 1`] = `
Array [
  Object {
    "content": Array [
      Object {
        "content": Array [
          Object {
            "text": "This is a ",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ],
    "macro": undefined,
    "text": "This is a ",
  },
  Object {
    "content": Array [
      Object {
        "content": Array [
          Object {
            "text": "quote with a ",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ],
    "macro": Object {
      "attrs": Object {},
      "macro": "quote",
    },
    "text": "quote with a ",
  },
  Object {
    "content": Array [
      Object {
        "content": Array [
          Object {
            "text": "panel",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ],
    "macro": Object {
      "attrs": Object {},
      "macro": "quote",
    },
    "text": "panel",
  },
  Object {
    "content": Array [
      Object {
        "content": Array [
          Object {
            "text": " inside",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ],
    "macro": Object {
      "attrs": Object {},
      "macro": "quote",
    },
    "text": " inside",
  },
  Object {
    "content": Array [
      Object {
        "content": Array [
          Object {
            "text": ".",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ],
    "macro": undefined,
    "text": ".",
  },
]
`;

exports[`JIRA wiki markup - Abstract tree should match parsed structure for simple code containing string 1`] = `
Array [
  Object {
    "content": Array [
      Object {
        "content": Array [
          Object {
            "text": "This is a ",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ],
    "macro": undefined,
    "text": "This is a ",
  },
  Object {
    "content": Array [
      Object {
        "text": "<xml_code/>",
        "type": "text",
      },
    ],
    "macro": Object {
      "attrs": Object {
        "xml": "",
      },
      "macro": "code",
    },
    "text": "<xml_code/>",
  },
]
`;

exports[`JIRA wiki markup - Abstract tree should match parsed structure for simple quote string 1`] = `
Array [
  Object {
    "content": Array [
      Object {
        "content": Array [
          Object {
            "text": "This is a ",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ],
    "macro": undefined,
    "text": "This is a ",
  },
  Object {
    "content": Array [
      Object {
        "content": Array [
          Object {
            "text": "simple quote",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ],
    "macro": Object {
      "attrs": Object {},
      "macro": "quote",
    },
    "text": "simple quote",
  },
]
`;

exports[`JIRA wiki markup - Abstract tree should match parsed structure for simple quote wrapper string 1`] = `
Array [
  Object {
    "content": Array [
      Object {
        "content": Array [
          Object {
            "text": "simple quote",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ],
    "macro": Object {
      "attrs": Object {},
      "macro": "quote",
    },
    "text": "simple quote",
  },
]
`;

exports[`JIRA wiki markup - Abstract tree should match parsed structure for string with a wrong order of macros 1`] = `
Array [
  Object {
    "content": Array [
      Object {
        "content": Array [
          Object {
            "text": "This is a ",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ],
    "macro": undefined,
    "text": "This is a ",
  },
  Object {
    "content": Array [
      Object {
        "content": Array [
          Object {
            "text": " panel with a ",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ],
    "macro": Object {
      "attrs": Object {
        "foo": "bar",
      },
      "macro": "panel",
    },
    "text": " panel with a ",
  },
  Object {
    "content": Array [
      Object {
        "content": Array [
          Object {
            "text": "quote inside",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ],
    "macro": Object {
      "attrs": Object {},
      "macro": "quote",
    },
    "text": "quote inside",
  },
  Object {
    "content": Array [
      Object {
        "content": Array [
          Object {
            "text": " but it is broken",
            "type": "text",
          },
        ],
        "type": "paragraph",
      },
    ],
    "macro": Object {
      "attrs": Object {},
      "macro": "quote",
    },
    "text": " but it is broken",
  },
]
`;
